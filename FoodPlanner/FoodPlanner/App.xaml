<Application x:Class="FoodPlanner.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:t="http://schemas.microsoft.com/winfx/2006/xaml/presentation, http://schemas.microsoft.com/netfx/2007/xaml/presentation"
             xmlns:local="clr-namespace:FoodPlanner"
             Startup="ApplicationStartup"
             Exit="ApplicationExit">
    <Application.Resources>
        <!--Brushes used in templates-->
        <SolidColorBrush x:Key="Button.Static.Border" Color="#898888"/>
        <SolidColorBrush x:Key="Button.Static.Border.Light" Color="#D4D4D4"/>
        <SolidColorBrush x:Key="Button.Colour.Border" Color="#FB4E00"/>
        <SolidColorBrush x:Key="Text.Orange" Color="#FB4E00"/>
        <SolidColorBrush x:Key="Button.Text.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="BackgroundColour" Color="#E2E2E2"/>

        <!--Start: Templates for title text-->
        <Style TargetType="{x:Type Control}" x:Key="TextTitle">
            <Setter Property="Foreground" Value="{StaticResource Text.Orange}"/>
            <Setter Property="FontSize" Value="14"/>
        </Style>

        <Style TargetType="{x:Type TextBlock}" x:Key="TextblockTitle">
            <Setter Property="Foreground" Value="{StaticResource Text.Orange}"/>
            <Setter Property="FontSize" Value="16"/>
        </Style>
        <!--End: Templates for title text-->
        <!--Start: Template for undertitle text-->
        <Style TargetType="{x:Type TextBlock}" x:Key="TextUnderTitle">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="TextDecorations" Value="Underline"/>
        </Style>
        <!--End: Template for undertitle text-->

        <!--Start: Template for text label-->
        <Style x:Key="TextLabelTemplate" TargetType="{x:Type Label}">
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="BorderThickness" Value="5"/>
            <Setter Property="Background" Value="{StaticResource Button.Text.Background}"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>
        <!--End: Template for text label-->
        
        <!--Start: Template for Image buttons-->
        <Style x:Key="ButtonIconTemplate" TargetType="{x:Type Button}">
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Colour.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Colour.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--End: Template for Image buttons-->

        <!--Start: Template for recipes list-->
        <DataTemplate x:Key="ListRecipesTemplate">
            <Grid>
                <StackPanel  HorizontalAlignment="Stretch">
                    <Border Name="ItemBorder" Margin="3" BorderBrush="{StaticResource Button.Static.Border}" BorderThickness="1" Padding="2" HorizontalAlignment="Stretch">
                        <Grid Name="ItemGrid" Width="{Binding ElementName=ItemBorder,Path=ActualWidth}">
                            <Grid.ColumnDefinitions >
                                <ColumnDefinition Width="75"/>
                                <ColumnDefinition Width="{Binding ElementName=ItemGrid,Path=MaxWidth}"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Image  Grid.RowSpan="2" Height="75" Width="75" Stretch="UniformToFill" Source="{Binding recipe.Image}" />
                            <Label Grid.Column="1"  Grid.Row="1" Content="{Binding getMatchPercentage}" ContentStringFormat=" {0} ingredients"/>
                            <TextBlock Grid.Column="1" Grid.ColumnSpan="2" Text="{Binding recipe.Title}" Padding="5 0 5 0" TextTrimming="CharacterEllipsis"  Style="{StaticResource TextblockTitle}" FontSize="20"/>
                            <StackPanel x:Name="addStackpannel" Orientation="Horizontal" Grid.Column="2" Grid.Row="1" Height="30"  HorizontalAlignment="Right">
                                <DatePicker Margin="5 0 5 0" Visibility="Collapsed"/>
                                <Button Style="{StaticResource ButtonIconTemplate}" Width="30" Height="{Binding ElementName=addStackpannel, Path=ActualHeight}" Margin="0 0 5 0">
                                    <Button.Background>
                                        <ImageBrush ImageSource="Images/plusIcon.png" Stretch="Uniform"/>
                                    </Button.Background>
                                </Button>
                            </StackPanel>
                        </Grid>
                    </Border>
                </StackPanel>
            </Grid>
        </DataTemplate>

        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--End: Template for recipes list-->

        <!--Start: Template for Shopping List (element Listview)-->
        <DataTemplate x:Key="ShoppingListNameCell">
            <TextBlock Text="{Binding Path=Ingredient}" Foreground="Black"/>
        </DataTemplate>
        <DataTemplate x:Key="ShoppingListQuantityCell">
            <TextBlock Text="{Binding Path=Quantity}" Foreground="Black"/>
        </DataTemplate>
        <DataTemplate x:Key="ShoppingListUnitCell">
            <TextBlock Text="{Binding Path=Ingredient.Unit}" Foreground="Black"/>
        </DataTemplate>
        <DataTemplate x:Key="ShoppingListUnitAndQuantityCell">
            <TextBlock Foreground="Black">
                <TextBlock.Text>
                    <MultiBinding StringFormat="{}{1} {0}">
                        <Binding Path="Ingredient.Unit" />
                        <Binding Path="Quantity" />
                    </MultiBinding>
                </TextBlock.Text>
            </TextBlock>
        </DataTemplate>
        <!-- End: Template for Shopping List (element Listview)-->

        <!--Start: Meal planning Page Template for day listboxes-->
        <DataTemplate x:Key="MealsListBoxTemplate">
            <Grid Background="{StaticResource Button.Static.Border.Light}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseUp">
                        <i:InvokeCommandAction Command="{Binding Source={x:Static local:Navigator.GoToRecipeCommand}}" 
                                               CommandParameter="{Binding Content.Recipe, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>

                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBlock Text="{Binding Recipe.Title}" FontSize="12" TextTrimming="CharacterEllipsis" Width="100"/>
                <Label Content="{Binding Participants}" ContentStringFormat="Planned for {0} person(s)" FontSize="10" Grid.Row="1"/>
            </Grid>
        </DataTemplate>
        <ItemsPanelTemplate x:Key="WrapPanelHorizontalTemplate">
            <WrapPanel Orientation="Horizontal" Background="{StaticResource BackgroundColour}"/>
        </ItemsPanelTemplate>
        <!--End: Meal planning Page Template for day listboxes-->
        
        <DataTemplate x:Key="StockListRatingCellTemplate">
            <TextBlock Text="{Binding Path=IngredientValue}" Foreground="Black"/>
        </DataTemplate>
        <!--Start: -->
    </Application.Resources>
</Application>
