<Application x:Class="FoodPlanner.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <!--Brushes used in templates-->
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.Blue.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Text.Background" Color="#FFDDDDDD"/>

        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <!--Start: Template for Image buttons-->
        <Style x:Key="ButtonIconTemplate" TargetType="{x:Type Button}">
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Blue.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Blue.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--End: Template for Image buttons-->
        <Style x:Key="ButtonTextTemplate" TargetType="{x:Type Button}">
        	<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        	<Setter Property="Background" Value="{StaticResource Button.Text.Background}"/>
        	<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
        	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        	<Setter Property="BorderThickness" Value="5"/>
            <Setter Property="Margin" Value="2"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type Button}">
        				<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
        					<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        				</Border>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsDefaulted" Value="true">
        						<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
        					</Trigger>
        					<Trigger Property="IsMouseOver" Value="true">
        						<Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
        						<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
        					</Trigger>
        					<Trigger Property="IsPressed" Value="true">
        						<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
        						<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
        					</Trigger>
        					<Trigger Property="IsEnabled" Value="false">
        						<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
        						<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
        						<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <!--Start: Template for recipes list-->
        <DataTemplate x:Key="ListRecipesTemplate">
            <Grid>
                <Border Margin="3" BorderBrush="#909090" BorderThickness="1" Padding="2">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="75"/>
                            <ColumnDefinition Width="275"/>
                        </Grid.ColumnDefinitions>

                        <Image Grid.Column="0" Height="75" Width="75" Stretch="UniformToFill" Source="/FoodPlanner;component/Images/181.jpg" />

                        <Grid Grid.Column="1">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="40"/>
                                <RowDefinition Height="25"/>
                            </Grid.RowDefinitions>
                            
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="50"/>
                            </Grid.ColumnDefinitions>

                            <Label Padding="5,0,0,0" Grid.Column="0" Grid.Row="0" FontSize="30" Content="Test"/>
                            <Label Grid.Column="0" Grid.Row="1" Content="TEST"/>

                            <Label Padding="0,0,5,0" Grid.Column="1" Grid.Row="0" HorizontalContentAlignment="Right" FontSize="30" Content="1/2"/>
                            <Label Padding="0,0,5,0" Grid.Column="1" Grid.Row="1" HorizontalContentAlignment="Right" Content="4/5"/>
                        </Grid>
                    </Grid>
                </Border>
            </Grid>
        </DataTemplate>
        <Style x:Key="FocusVisual">
        	<Setter Property="Control.Template">
        		<Setter.Value>
        			<ControlTemplate>
        				<Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <!--End: Template for recipes list-->
        <!--Start: Template for Shopping List (element Listview)-->
        <DataTemplate x:Key="ShoppingListNameCell">
            <TextBlock Text="{Binding Path=Ingredient}" Foreground="Black"/>
        </DataTemplate>
        <DataTemplate x:Key="ShoppingListQuantityCell">
            <TextBlock Text="{Binding Path=Quantity}" Foreground="Black"/>
        </DataTemplate>
        <DataTemplate x:Key="ShoppingListUnitCell">
            <TextBlock Text="{Binding Path=Ingredient.Unit}" Foreground="Black"/>
        </DataTemplate>
        <!-- End: Template for Shopping List (element Listview)-->
    </Application.Resources>
</Application>
