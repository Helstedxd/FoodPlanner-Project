<Page 
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
      xmlns:ViewModels="clr-namespace:FoodPlanner.ViewModels"
      xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
      x:Class="FoodPlanner.Views.InventoryPage"
      mc:Ignorable="d" d:DesignHeight="300" d:DesignWidth="300"
      Title="InventoryPage">
    <Page.DataContext>
        <ViewModels:InventoryViewModel/>
    </Page.DataContext>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <!--<StackPanel Orientation="Horizontal" Margin="0,0,0.063,0.168">-->
        <!-- <TextBlock Text="Add Food:" VerticalAlignment="Center" Margin="5" />-->
        <!--<toolkit:AutoCompleteBox x:Name="inventoryAutoCompleteBox" Width="475" Margin="5" VerticalAlignment="Center"
                                         FilterMode="Contains" IsTextCompletionEnabled="True"
                                         MinimumPopulateDelay="500" MinimumPrefixLength="2" Populating="inventoryAutoCompleteBox_Populating" />-->
        <!--<Button Grid.Column="1" x:Name="AddButton" Style="{DynamicResource ButtonIconTemplate}" IsEnabled="{Binding disableAddButton, Mode=OneWay}" Command="{Binding AddToInventory}">
            <Button.Background>
                <ImageBrush ImageSource="/Images/plusIcon.png" Stretch="Uniform"/>
            </Button.Background>
        </Button>-->

        <Border Grid.Column="0"  BorderThickness=" 2,2,1,2" BorderBrush="Black"/>
        <Border Grid.Column="1"  BorderThickness=" 1,2,2,2" BorderBrush="Black"/>
        <!--</StackPanel>-->

        <!-- AutoComplete -->
        <TextBox Text="{Binding SearchText, Mode=TwoWay, Delay=500, UpdateSourceTrigger=PropertyChanged}"/>
        <ListBox Grid.ColumnSpan="2" Margin="5" Grid.Row="1" ItemsSource="{Binding FoundIngredients}" SelectedItem="{Binding SelectedIngredient}" Visibility="{Binding AutoCompleteListVisibility}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseUp">
                    <i:InvokeCommandAction Command="{Binding AddIngredientToInventoryCommand}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </ListBox>

        <!--<DataGrid x:Name="inventoryIngredientsDataGrid" RowDetailsVisibilityMode="VisibleWhenSelected" Margin="139,4.77,5.063,4.895" ItemsSource="{Binding InventoryIngredients, Mode=OneWay}" EnableRowVirtualization="True" AutoGenerateColumns="False" Grid.Row="2">
            <DataGrid.Columns>
                <DataGridTextColumn x:Name="ingredientColumn" Width="Auto" Header="Ingredient" IsReadOnly="True" Binding="{Binding Ingredient}"/>
                <DataGridTextColumn x:Name="quantityColumn" Width="Auto" Header="Quantity" Binding="{Binding Quantity}"/>
                <DataGridTemplateColumn x:Name="purchaseDateColumn" Width="Auto" Header="Purchase Date">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <DatePicker SelectedDate="{Binding PurchaseDate, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn x:Name="expirationDateColumn" Width="Auto" Header="Expiration Date">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <DatePicker SelectedDate="{Binding ExpirationDate, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>-->
        
        <ListView Margin="5" Grid.Row="2" ItemsSource="{Binding InventoryIngredients}">
            <ListView.View>
                <GridView>
                    <GridViewColumn Header="Ingredient" DisplayMemberBinding="{Binding Ingredient.Name}" Width="Auto" />
                    <GridViewColumn Header="Quantity">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <!-- TODO: implement/create up/down functionality -->
                                <!--<xctk:DecimalUpDown Value="{Binding Quantity}" FormatString="{Binding Ingredient.Unit, StringFormat=0 {0}}" Width="100" />-->
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} {1}">
                                            <Binding Path="Quantity" />
                                            <Binding Path="Ingredient.Unit" />
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="Expiration Date" Width="Auto">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <DatePicker SelectedDate="{Binding ExpirationDate, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
        </ListView>

        <Button x:Name="SaveButton" Content="Save" HorizontalAlignment="Right" Margin="5" VerticalAlignment="Bottom" Width="75" Grid.Row="3" Command="{Binding SaveInventoryCommand}" Grid.ColumnSpan="2"/>

    </Grid>
</Page>